// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}
// Developmen mixins
// testing mixin - sets background-color: $col !important; 
@mixin testing($col: red) {
	background-color: $col !important; 
}

/// Makes an element's :before pseudoelement a FontAwesome icon.
/// @param {string} $content Optional content value to use.
@mixin icon($content: false) {

	text-decoration: none;

	&:before {

		@if $content {
			content: $content;
		}

		-moz-osx-font-smoothing: grayscale;
		-webkit-font-smoothing: antialiased;
		font-family: FontAwesome;
		font-style: normal;
		font-weight: normal;
		text-transform: none !important;

	}

}


// Show Size
@mixin size($colour: red) {
	// #showsize {
    #wp-admin-bar-top-secondary {
		// position: fixed;
		// @include pad(15px);
		// top: 0;
		// @include span(isolate 5 at 6 of 12);
		// z-index: 9999999;
		// @include border-radius(10px);
		// &:hover{opacity: 0.8;}
		&::after {	
			content: 'minimum';
      @include susy-breakpoint($phone-p) {
        content: '$phone-p'; }
      @include susy-breakpoint($phone-l) {
        content: '$phone-l'; }
      @include susy-breakpoint($tab-p) {
        content: '$tab-p'; }
      @include susy-breakpoint($tab-l) {
        content: '$tab-l'; };
      @include susy-breakpoint($desktop) {
        content: '$desktop'; }
      @include susy-breakpoint($desk-full) {
        content: '$desk-full'; }
		};
	};
}	

/*
 * Page layout mixins
 */
@mixin page {
  @include span(14 content-box);
  @include susy-breakpoint($phone-p) {
    // content: '$phone-p'; 
  }
  @include susy-breakpoint($phone-l) {
    // content: '$phone-l'; 
    @include span(13);
  }
  @include susy-breakpoint($tab-p) {
    // Tablet-portrait and up
    // @include pad(2 of 16);
  }
  @include susy-breakpoint($tab-l) {
    // @include pad(3 of 16);
    @include span(12);
  };
  @include susy-breakpoint($desktop) {
    // content: '$desktop'; 
		// @include pad(3.5 of 16);
  }
  @include susy-breakpoint($desk-full) {
    // content: '$desk-full'; 
    @include span(9);
    
  }
}
@mixin page-squeeze() {
  @include page;

  @include pad(1);
  @include susy-breakpoint($phone-p) {
    // content: '$phone-p'; 
  }
  @include susy-breakpoint($phone-l) {
    // content: '$phone-l'; 
    @include pad(1.5);
  }
  @include susy-breakpoint($tab-p) {
    // Tablet-portrait and up
  }
  @include susy-breakpoint($tab-l) {
    @include pad(2);
  };
  @include susy-breakpoint($desktop) {
    // content: '$desktop'; 
		// @include pad(3.5 of 16);
  }
  @include susy-breakpoint($desk-full) {
    // content: '$desk-full'; 
    @include pad(3.5);
    
  }
}
@mixin band-colors($color:  $color__background-band) {
    color: $color__text-alt;
    background-color: $color;
    // >p a, >a {color: $color__orange;} // moved to _links.scss
}
@mixin page-band($color:  $color__background-band) {
    @include rhythm-padding(0.6);
    @include band-colors($color);
    @include page-squeeze();

}
// @mixin page {
//   position: relative;
// 	@include span(full);
//   @include susy-breakpoint($max-tab-p) {
// 		// @include span(14 of 16 nest);
//     // @include pad(1 of 16);
//   }
// 	//up to tablet landscap
// 	@include susy-breakpoint($tablet-portrait) {
// 		// Tablet-portrait and up
// 		// @include span(14 of 16 nest);
// 		// @include pad(2 of 16);
// 	};
// 	@include susy-breakpoint($tablet-landscape) {
//     *{@include testing;};
// 		// Tablet-portrait and up
// 		// @include span(12 of 16 nest);
// 		// @include pad(3 of 16);
// 	};
// 	@include susy-breakpoint($desktop) {
// 		// @include span(16 of 16 nest);
// 		// @include pad(3 of 16);
// 	}
// 	// width: span(full);
// 	// @include page-squeeze;
// }
@mixin navtabs($corner: 1em) {
  @include margin-leader(1);
  @include adjust-font-size-to($font__size-menu);
  @include pad(1rem);
  @include border-radius($corner);
}
@mixin nolink() {
	text-decoration: none;
	background-color: clear !important; 
}
@mixin button($butcol: $color__background-button) {
	// @include contrasted($butcol);
  background-color: $color__a-r;
	// &:hover {@include contrasted(adjust-lightness($butcol, 20));}
	@include nolink;
	@include border-radius(2em);

}
@mixin transparent($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
  zoom: 1;
}
//colour generator
@mixin colgen($base, $light: white, $dark: black){
	&:nth-child(3n) {background-color: $base;}
	&:nth-child(3n+1) {background-color: complement($base);}
	&:nth-child(3n+2) {background-color: mix($base, complement($base), 30);}
}
